//
// this file is automatically generated
//
syntax = "proto3";
option java_generic_services = true;
option java_package = "org.marketcetera.trade.pnl";
option java_outer_classname = "TradePnlTypesRpc";
import "rpc_base.proto";
import "rpc_admin.proto";
import "rpc_trade_types.proto";
import "google/protobuf/timestamp.proto";

// describes the position of a user of an instrument at a particular point in time
message PnlPosition {
    Instrument instrument = 1; // instrument of the position
    User user = 2; // user that owns the position
    Qty position = 3; // quantity of the position
    google.protobuf.Timestamp effectiveDate = 4; // effective date of the position
    Qty weightedAverageCost = 5; // total cost of the position
    Qty realizedGain = 6; // realized gain of the position
    Qty unrealizedGain = 7; // unrealized gain of the position
}

// describes the position of a user of an instrument
message CurrentPnlPosition {
    Instrument instrument = 1; // instrument of the position
    User user = 2; // user that owns the position
    Qty position = 3; // quantity of the position
    Qty weightedAverageCost = 4; // total cost of the position
    Qty realizedGain = 5; // realized gain of the position
    Qty unrealizedGain = 6; // unrealized gain of the position
}

// describes the PnL of a user of an instrument
message ProfitAndLoss {
    Instrument instrument = 1; // instrument for which pnl is calculated
    User user = 2; // user that owns the position
    Qty realizedGain = 3; // realized gain of the position
    Qty unrealizedGain = 4; // unrealized gain of the position
    Qty basisPrice = 5; // basis price of the position
    Qty position = 6; // size of the position
}

// Identifies a lot used to calculate profit and loss
message Lot {
    User user = 1; // user that owns the lot
    Trade trade = 2; // trade that created the lot
    PnlPosition position = 3; // position to which the lot contributes
    Qty quantity = 4; // size of the lot
    Qty allocatedQuantity = 5; // amount of the lot that has been allocted
    google.protobuf.Timestamp effectiveDate = 6; // effective date of the lot
    Qty basisPrice = 7; // basis price of the lot
    Qty gain = 8; // calculated gain of the lot
    Qty tradePrice = 9; // trade price of the lot
}

// Indicates a trade that took place at a particular point in time for a particular amount and price
message Trade {
    Instrument instrument = 1; // instrument traded
    string executionId = 2; // order id of the trade
    Qty price = 3; // price of the trade
    Qty quantity = 4; // quantity of the lot
    google.protobuf.Timestamp transactionTime = 5; // transaction time of the trade
}

// Provides a user-centric view of a trade
message UserTrade {
    Trade trade = 1; // trade that created the lot
    User user = 2; // user that owns this side of the trade
    Side side = 3; // side of the trade
    ProfitAndLoss profitAndLoss = 4; // pnl for the trade
    string orderId = 5; // order id of the trade
}
