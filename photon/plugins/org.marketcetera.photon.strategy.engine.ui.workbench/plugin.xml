<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>

   <extension
         point="org.eclipse.ui.views">
      <view
            category="org.marketcetera.photon.strategy"
            class="org.marketcetera.photon.commons.ui.workbench.WorkaroundGuiceExtensionFactory:org.marketcetera.photon.internal.strategy.engine.ui.workbench.StrategyEnginesView"
            icon="icons/view16/strategy_engines.gif"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.StrategyEnginesView"
            name="%strategyEnginesView.name">
      </view>
   </extension>
   <extension
         point="org.eclipse.ui.navigator.navigatorContent">
      <navigatorContent
            activeByDefault="true"
            contentProvider="org.marketcetera.photon.strategy.engine.ui.StrategyEnginesContentProvider"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.engineContent"
            labelProvider="org.marketcetera.photon.internal.strategy.engine.ui.workbench.StrategyEnginesCommonLabelProvider"
            name="%strategyEnginesContent.name">
         <triggerPoints>
            <instanceof
                  value="java.lang.Object">
            </instanceof>
         </triggerPoints>
      </navigatorContent>
   </extension>
   <extension
         point="org.eclipse.ui.navigator.viewer">
      <viewer
            viewerId="org.marketcetera.photon.strategy.engine.ui.workbench.StrategyEnginesView">
         <options>
            <property
                  name="org.eclipse.ui.navigator.hideLinkWithEditorAction"
                  value="true">
            </property>
         </options>
      </viewer>
      <viewerContentBinding
            viewerId="org.marketcetera.photon.strategy.engine.ui.workbench.StrategyEnginesView">
         <includes>
            <contentExtension
                  pattern="org.marketcetera.photon.strategy.engine.ui.workbench.engineContent">
            </contentExtension>
         </includes>
      </viewerContentBinding>
   </extension>
   <extension
         point="org.eclipse.ui.decorators">
      <decorator
            class="org.marketcetera.photon.strategy.engine.ui.StrategyEngineStatusDecorator"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.statusDecorator"
            label="%strategyEnginesStatusDecoration.label"
            lightweight="true"
            state="true">
         <enablement>
            <or>
               <objectClass
                     name="org.marketcetera.photon.strategy.engine.model.core.StrategyEngine">
               </objectClass>
               <objectClass
                     name="org.marketcetera.photon.strategy.engine.model.core.DeployedStrategy">
               </objectClass>
            </or>
         </enablement>
      </decorator>
   </extension>
   <extension
         point="org.eclipse.ui.commands">
      <category
            id="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            name="%strategyEngineCommandsCategory.name">
      </category>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.connect"
            name="%connectCommand.name">
      </command>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.disconnect"
            name="%disconnectCommand.name">
      </command>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.deploy"
            name="%deployCommand.name">
      </command>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.undeploy"
            name="%undeployCommand.name">
      </command>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.start"
            name="%startCommand.name">
      </command>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.stop"
            name="%stopCommand.name">
      </command>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.restart"
            name="%restartCommand.name">
      </command>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.startAll"
            name="%startAllCommand.name">
      </command>
      <command
            categoryId="org.marketcetera.photon.strategy.engine.ui.workbench.engineCommands"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.stopAll"
            name="%stopAllCommand.name">
      </command>
   </extension>
   <extension
         point="org.eclipse.ui.handlers">
      <handler
            class="org.marketcetera.photon.commons.ui.workbench.WorkaroundGuiceExtensionFactory:org.marketcetera.photon.internal.strategy.engine.ui.workbench.handlers.DeployHandler"
            commandId="org.marketcetera.photon.strategy.engine.ui.workbench.deploy">
         <activeWhen>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngineSelected">
            </reference>
         </activeWhen>
         <enabledWhen>
            <iterate>
               <test
                     property="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngine.connectionState"
                     value="CONNECTED">
               </test>
            </iterate></enabledWhen>
      </handler>
      <handler
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.handlers.UndeployHandler"
            commandId="org.marketcetera.photon.strategy.engine.ui.workbench.undeploy">
         <activeWhen>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
            </reference>
         </activeWhen>
      </handler>
      <handler
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.handlers.StartAllHandler"
            commandId="org.marketcetera.photon.strategy.engine.ui.workbench.startAll">
         <activeWhen>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesSelected">
            </reference>
         </activeWhen>
         <enabledWhen>
            <iterate
                  ifEmpty="false"
                  operator="and">
               <test
                     property="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngine.connectionState"
                     value="CONNECTED">
               </test>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.handlers.StopAllHandler"
            commandId="org.marketcetera.photon.strategy.engine.ui.workbench.stopAll">
         <activeWhen>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesSelected">
            </reference>
         </activeWhen>
         <enabledWhen>
            <iterate
                  ifEmpty="false"
                  operator="and">
               <test
                     property="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngine.connectionState"
                     value="CONNECTED">
               </test>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.handlers.StartHandler"
            commandId="org.marketcetera.photon.strategy.engine.ui.workbench.start">
         <activeWhen>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
            </reference>
         </activeWhen>
         <enabledWhen>
            <iterate
                  ifEmpty="false"
                  operator="or">
               <test
                     property="org.marketcetera.photon.strategy.engine.ui.workbench.deployedStrategy.state"
                     value="STOPPED">
               </test>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.handlers.StopHandler"
            commandId="org.marketcetera.photon.strategy.engine.ui.workbench.stop">
         <activeWhen>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
            </reference>
         </activeWhen>
         <enabledWhen>
            <iterate
                  ifEmpty="false"
                  operator="or">
               <test
                     property="org.marketcetera.photon.strategy.engine.ui.workbench.deployedStrategy.state"
                     value="RUNNING">
               </test>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.handlers.RestartHandler"
            commandId="org.marketcetera.photon.strategy.engine.ui.workbench.restart">
         <activeWhen>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
            </reference>
         </activeWhen>
         <enabledWhen>
            <iterate
                  ifEmpty="false"
                  operator="or">
               <test
                     property="org.marketcetera.photon.strategy.engine.ui.workbench.deployedStrategy.state"
                     value="RUNNING">
               </test>
            </iterate>
         </enabledWhen>
      </handler>
      <handler
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.handlers.RefreshHandler"
            commandId="org.eclipse.ui.file.refresh">
         <activeWhen>
            <with
                  variable="activePartId">
               <equals
                     value="org.marketcetera.photon.strategy.engine.ui.workbench.StrategyEnginesView">
               </equals>
            </with>
         </activeWhen>
         <enabledWhen>
            <iterate
                  ifEmpty="false"
                  operator="and">
               <or>
                  <and>
                     <instanceof
                           value="org.marketcetera.photon.strategy.engine.model.core.StrategyEngine">
                     </instanceof>
                     <test
                           property="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngine.connectionState"
                           value="CONNECTED">
                     </test>
                  </and>
                  <and>
                     <instanceof
                           value="org.marketcetera.photon.strategy.engine.model.core.DeployedStrategy">
                     </instanceof>
                  </and>
               </or>
            </iterate>
         </enabledWhen>
      </handler>
   </extension>
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="popup:org.marketcetera.photon.strategy.engine.ui.workbench.StrategyEnginesView">
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.connect"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <with
                     variable="activePart">
                  <test
                        property="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesView.connectCommandHandled"
                        value="true">
                  </test>
               </with>
            </visibleWhen>
         </command>
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.disconnect"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <with
                     variable="activePart">
                  <test
                        property="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesView.disconnectCommandHandled"
                        value="true">
                  </test>
               </with>
            </visibleWhen>
         </command>
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.deploy"
               label="%deployMenuItem.label"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <reference
                     definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngineSelected">
               </reference>
            </visibleWhen>
         </command>
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.undeploy"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <reference
                     definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
               </reference>
            </visibleWhen>
         </command>
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.startAll"
               disabledIcon="icons/dlcl16/start.gif"
               icon="icons/elcl16/start.gif"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <reference
                     definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesSelected">
               </reference>
            </visibleWhen>
         </command>
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.stopAll"
               disabledIcon="icons/dlcl16/stop.gif"
               icon="icons/elcl16/stop.gif"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <reference
                     definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesSelected">
               </reference>
            </visibleWhen>
         </command>
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.start"
               disabledIcon="icons/dlcl16/start.gif"
               icon="icons/elcl16/start.gif"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <reference
                     definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
               </reference>
            </visibleWhen>
         </command>
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.stop"
               disabledIcon="icons/dlcl16/stop.gif"
               icon="icons/elcl16/stop.gif"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <reference
                     definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
               </reference>
            </visibleWhen>
         </command>
         <command
               commandId="org.marketcetera.photon.strategy.engine.ui.workbench.restart"
               disabledIcon="icons/dlcl16/restart.gif"
               icon="icons/elcl16/restart.gif"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <reference
                     definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
               </reference>
            </visibleWhen>
         </command>
         <command
               commandId="org.eclipse.ui.file.refresh"
               disabledIcon="icons/dlcl16/refresh.gif"
               icon="icons/elcl16/refresh.gif"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <count
                     value="+">
               </count>
            </visibleWhen>
         </command>
         <command
               commandId="org.eclipse.ui.edit.delete"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <with
                     variable="activePart">
                  <test
                        property="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesView.deleteCommandHandled"
                        value="true">
                  </test>
               </with>
            </visibleWhen>
         </command>
         <command
               commandId="org.eclipse.ui.file.properties"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <count
                     value="1">
               </count>
            </visibleWhen>
         </command>
      </menuContribution>
   </extension>
   <extension
         point="org.eclipse.core.expressions.definitions">
      <definition
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesSelected">
         <iterate
               ifEmpty="false"
               operator="and">
            <instanceof
                  value="org.marketcetera.photon.strategy.engine.model.core.StrategyEngine">
            </instanceof>
         </iterate>
      </definition>
      <definition
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngineSelected">
         <and>
            <count
                  value="1">
            </count>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesSelected">
            </reference>
         </and>
      </definition>
      <definition
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
         <iterate
               ifEmpty="false"
               operator="and">
            <instanceof
                  value="org.marketcetera.photon.strategy.engine.model.core.DeployedStrategy">
            </instanceof>
         </iterate>
      </definition>
      <definition
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategySelected">
         <and>
            <count
                  value="1">
            </count>
            <reference
                  definitionId="org.marketcetera.photon.strategy.engine.ui.workbench.strategiesSelected">
            </reference>
         </and>
      </definition>
   </extension>
   <extension
         point="org.eclipse.core.expressions.propertyTesters">
      <propertyTester
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.StrategyEnginePropertyTester"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginePropertyTester"
            namespace="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngine"
            properties="connectionState"
            type="org.marketcetera.photon.strategy.engine.model.core.StrategyEngine">
      </propertyTester>
      <propertyTester
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.DeployedStrategyPropertyTester"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.deployedStrategyPropertyTester"
            namespace="org.marketcetera.photon.strategy.engine.ui.workbench.deployedStrategy"
            properties="state"
            type="org.marketcetera.photon.strategy.engine.model.core.DeployedStrategy">
      </propertyTester>
      <propertyTester
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.StrategyEnginesViewPropertyTester"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesViewPropertyTester"
            namespace="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesView"
            properties="connectCommandHandled,disconnectCommandHandled,deleteCommandHandled"
            type="org.marketcetera.photon.internal.strategy.engine.ui.workbench.StrategyEnginesView">
      </propertyTester>
   </extension>
   <extension
         point="org.eclipse.ui.propertyPages">
      <page
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.StrategyEngineIdentificationPropertyPage"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEngineIdentificationPropertyPage"
            name="%strategyEngineIdentificationPropertyPage.name">
         <enabledWhen>
            <adapt
                  type="org.marketcetera.photon.strategy.engine.model.core.StrategyEngine">
            </adapt>
         </enabledWhen>
      </page>
      <page
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.DeployedStrategyConfigurationPropertyPage"
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategyConfigurationPropertyPage"
            name="%strategyConfigurationPropertyPage.name">
         <enabledWhen>
            <adapt
                  type="org.marketcetera.photon.strategy.engine.model.core.DeployedStrategy">
            </adapt>
         </enabledWhen>
      </page>
   </extension>
   <extension
         point="org.eclipse.core.runtime.adapters">
      <factory
            adaptableType="org.marketcetera.photon.strategy.engine.model.core.StrategyEngine"
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.StrategyEngineAdapterFactory">
         <adapter
               type="org.eclipse.ui.model.IWorkbenchAdapter">
         </adapter>
      </factory>
      <factory
            adaptableType="org.marketcetera.photon.strategy.engine.model.core.DeployedStrategy"
            class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.DeployedStrategyAdapterFactory">
         <adapter
               type="org.eclipse.ui.model.IWorkbenchAdapter">
         </adapter>
      </factory>
   </extension>
   <extension
         point="org.eclipse.ui.contexts">
      <context
            id="org.marketcetera.photon.strategy.engine.ui.workbench.strategyEnginesViewReady"
            name="%strategyEnginesViewReadyContext.name">
      </context>
   </extension>
   <extension
         point="org.ops4j.peaberry.eclipse.modules">
         <module class="org.marketcetera.photon.internal.strategy.engine.ui.workbench.Module"/>
   </extension>

</plugin>
