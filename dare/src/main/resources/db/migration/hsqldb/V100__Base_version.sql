CREATE SEQUENCE HIBERNATE_SEQUENCE AS INTEGER START WITH 1;
CREATE TABLE "FLYWAY_SCHEMA_HISTORY"("installed_rank" INTEGER NOT NULL,"version" VARCHAR(50),"description" VARCHAR(200) NOT NULL,"type" VARCHAR(20) NOT NULL,"script" VARCHAR(1000) NOT NULL,"checksum" INTEGER,"installed_by" VARCHAR(100) NOT NULL,"installed_on" TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,"execution_time" INTEGER NOT NULL,"success" BIT(1) NOT NULL,CONSTRAINT "FLYWAY_SCHEMA_HISTORY_pk" PRIMARY KEY("installed_rank"));
CREATE INDEX "FLYWAY_SCHEMA_HISTORY_s_idx" ON "FLYWAY_SCHEMA_HISTORY"("success");
CREATE TABLE EXEC_REPORTS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,ACCOUNT VARCHAR(255),AVG_PRICE NUMERIC(17,7) NOT NULL,CUM_QTY NUMERIC(17,7) NOT NULL,EFF_CUM_QTY NUMERIC(17,7) NOT NULL,EXEC_TYPE INTEGER NOT NULL,EXPIRY VARCHAR(255),LAST_PRICE NUMERIC(17,7),LAST_QTY NUMERIC(17,7),OPTION_TYPE INTEGER,ORDER_ID VARCHAR(255) NOT NULL,ORD_STATUS INTEGER NOT NULL,ORIG_ORDER_ID VARCHAR(255),ROOT_ORDER_ID VARCHAR(255) NOT NULL,SECURITY_TYPE INTEGER NOT NULL,SEND_TIME TIMESTAMP NOT NULL,SIDE INTEGER NOT NULL,STRIKE_PRICE NUMERIC(17,7),SYMBOL VARCHAR(255) NOT NULL,ACTOR_ID BIGINT,REPORT_ID BIGINT NOT NULL,VIEWER_ID BIGINT,CONSTRAINT UK_IMDQ099U0QA8OB9TT5LJM6F7U UNIQUE(REPORT_ID));
CREATE TABLE FIX_MESSAGES(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,MESSAGE CLOB(8K) NOT NULL);
CREATE TABLE FIX_SESSION_ATTR_DSCRPTRS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,ADVICE VARCHAR(255),DEFAULT_VALUE VARCHAR(255),DESCRIPTION VARCHAR(1024),NAME VARCHAR(255) NOT NULL,PATTERN VARCHAR(255),REQUIRED BOOLEAN NOT NULL,CONSTRAINT UK_GB3X058KYH5S4FXW1FI67BYSC UNIQUE(NAME));
CREATE TABLE FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID BIGINT NOT NULL,VALUE VARCHAR(255),NAME VARCHAR(255) NOT NULL,PRIMARY KEY(FIX_SESSION_ID,NAME));
CREATE TABLE FIX_SESSIONS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,AFFINITY INTEGER NOT NULL,BROKER_ID VARCHAR(255) NOT NULL,DESCRIPTION VARCHAR(255),HOST VARCHAR(255) NOT NULL,ACCEPTOR BOOLEAN NOT NULL,DELETED BOOLEAN NOT NULL,ENABLED BOOLEAN NOT NULL,NAME VARCHAR(255) NOT NULL,PORT INTEGER NOT NULL,SESSION_ID VARCHAR(255) NOT NULL);
CREATE TABLE ID_REPOSITORY(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,NEXT_ID BIGINT);
CREATE TABLE INCOMING_FIX_MESSAGES(ID BIGINT NOT NULL PRIMARY KEY,CLORDID VARCHAR(255),EXECID VARCHAR(255),MESSAGE VARCHAR(4000) NOT NULL,MSG_SEQ_NUM INTEGER NOT NULL,MSG_TYPE VARCHAR(255) NOT NULL,SENDING_TIME TIMESTAMP NOT NULL,FIX_SESSION VARCHAR(255) NOT NULL);
CREATE TABLE MESSAGE_STORE_MESSAGES(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,SESSION_ID VARCHAR(255) NOT NULL,MESSAGE VARCHAR(8192) NOT NULL,MSG_SEQ_NUM INTEGER NOT NULL);
CREATE TABLE MESSAGE_STORE_SESSIONS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,SESSION_ID VARCHAR(255) NOT NULL,CREATION_TIME TIMESTAMP NOT NULL,SENDER_SEQ_NUM INTEGER NOT NULL,TARGET_SEQ_NUM INTEGER NOT NULL);
CREATE TABLE ORDER_STATUS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,ACCOUNT VARCHAR(255),AVG_PX NUMERIC(17,7) NOT NULL,BROKER_ID VARCHAR(255),CUM_QTY NUMERIC(17,7) NOT NULL,EXPIRY VARCHAR(255),LAST_PX NUMERIC(17,7) NOT NULL,LAST_QTY NUMERIC(17,7) NOT NULL,LEAVES_QTY NUMERIC(17,7) NOT NULL,OPTION_TYPE INTEGER,ORDER_ID VARCHAR(255) NOT NULL,ORDER_PX NUMERIC(17,7),ORDER_QTY NUMERIC(17,7) NOT NULL,ORD_STATUS VARCHAR(255) NOT NULL,ROOT_ORDER_ID VARCHAR(255) NOT NULL,SECURITY_TYPE INTEGER NOT NULL,SENDING_TIME TIMESTAMP NOT NULL,SIDE INTEGER NOT NULL,STRIKE_PRICE NUMERIC(17,7),SYMBOL VARCHAR(255) NOT NULL,EXECUTION_TIME TIMESTAMP,ACTOR_ID BIGINT,REPORT_ID BIGINT NOT NULL,VIEWER_ID BIGINT,CONSTRAINT UK_H8V9N38CYDUSMK1D0YYA6ND2D UNIQUE(REPORT_ID));
CREATE TABLE OUTGOING_MESSAGES(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,BROKER_ID VARCHAR(255) NOT NULL,MESSAGE_TYPE VARCHAR(255) NOT NULL,MSG_SEQ_NUM INTEGER,ORDER_ID VARCHAR(255),SENDER_COMP_ID VARCHAR(255) NOT NULL,SESSION_ID VARCHAR(255) NOT NULL,TARGET_COMP_ID VARCHAR(255) NOT NULL,ACTOR_ID BIGINT NOT NULL,FIX_MESSAGE_ID BIGINT NOT NULL,CONSTRAINT UK_HXVC6VRTMW1SWIK69WXT0DRLC UNIQUE(FIX_MESSAGE_ID),CONSTRAINT FK7AESWC52COXK8SSPDT9UA5E15 FOREIGN KEY(FIX_MESSAGE_ID) REFERENCES FIX_MESSAGES(ID));
CREATE TABLE PERMISSIONS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,DESCRIPTION VARCHAR(255),NAME VARCHAR(255) NOT NULL,CONSTRAINT UK_PNVTWLIIS6P05PN6I3NDJRQT2 UNIQUE(NAME));
CREATE TABLE REPORTS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,BROKER_ID VARCHAR(255),HIERARCHY INTEGER,ORIGINATOR INTEGER,REPORT_TYPE INTEGER NOT NULL,MSG_SEQ_NUM INTEGER NOT NULL,ORDER_ID VARCHAR(255) NOT NULL,REPORT_ID BIGINT NOT NULL,SEND_TIME TIMESTAMP NOT NULL,SESSION_ID VARCHAR(255) NOT NULL,ACTOR_ID BIGINT,FIX_MESSAGE_ID BIGINT NOT NULL,VIEWER_ID BIGINT,CONSTRAINT UK_CA90A4KKDYCPON22YNLI3D6OI UNIQUE(FIX_MESSAGE_ID),CONSTRAINT UK_AELY7CHRVTQWV4XFM76XUJ5BH UNIQUE(REPORT_ID),CONSTRAINT FK98BMVK76E2GP10MUHEOG0J1WA FOREIGN KEY(FIX_MESSAGE_ID) REFERENCES FIX_MESSAGES(ID));
CREATE TABLE ROLES(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,DESCRIPTION VARCHAR(255),NAME VARCHAR(255) NOT NULL,CONSTRAINT UK_OFX66KERUAPI6VYQPV6F2OR37 UNIQUE(NAME));
CREATE TABLE ROLES_PERMISSIONS(ROLES_ID BIGINT NOT NULL,PERMISSIONS_ID BIGINT NOT NULL,PRIMARY KEY(ROLES_ID,PERMISSIONS_ID),CONSTRAINT FK570WUY6SACDNRW8WDQJFH7J0Q FOREIGN KEY(PERMISSIONS_ID) REFERENCES PERMISSIONS(ID),CONSTRAINT FKB9GQC5KVLA3IJOVNIHSBB816E FOREIGN KEY(ROLES_ID) REFERENCES ROLES(ID));
CREATE TABLE ROLES_USERS(ROLE_ID BIGINT NOT NULL,SUBJECTS_ID BIGINT NOT NULL,PRIMARY KEY(ROLE_ID,SUBJECTS_ID),CONSTRAINT FKRXA1KWVAC3VQ2P3A4AUS28M3P FOREIGN KEY(ROLE_ID) REFERENCES ROLES(ID));
CREATE TABLE SUPERVISOR_PERMISSIONS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,DESCRIPTION VARCHAR(255),NAME VARCHAR(255) NOT NULL,USER_ID BIGINT NOT NULL,CONSTRAINT UK_4RD5TOWBSHLB1V1HV6W00SF6B UNIQUE(NAME));
CREATE TABLE SUPERVISOR_PERMISSIONS_PERMISSIONS(SUPERVISORPERMISSION_ID BIGINT NOT NULL,PERMISSIONS_ID BIGINT NOT NULL,PRIMARY KEY(SUPERVISORPERMISSION_ID,PERMISSIONS_ID),CONSTRAINT FKTKCTB5N3GGMU727F5MWLMUTK3 FOREIGN KEY(PERMISSIONS_ID) REFERENCES PERMISSIONS(ID),CONSTRAINT FK6B5T61SOYNLXLYRMB8Y59Y6TF FOREIGN KEY(SUPERVISORPERMISSION_ID) REFERENCES SUPERVISOR_PERMISSIONS(ID));
CREATE TABLE SUPERVISOR_PERMISSIONS_USERS(SUPERVISORPERMISSION_ID BIGINT NOT NULL,SUBJECTS_ID BIGINT NOT NULL,PRIMARY KEY(SUPERVISORPERMISSION_ID,SUBJECTS_ID),CONSTRAINT FK16N73Q253VU1UNEMUPOBM3EKJ FOREIGN KEY(SUPERVISORPERMISSION_ID) REFERENCES SUPERVISOR_PERMISSIONS(ID));
CREATE TABLE USER_ATTRIBUTES(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,ATTRIBUTE CLOB(256K) NOT NULL,USER_ATTRIBUTE_TYPE INTEGER NOT NULL,USER_ID BIGINT);
CREATE TABLE USERS(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,DESCRIPTION VARCHAR(255),NAME VARCHAR(255) NOT NULL,IS_ACTIVE BOOLEAN NOT NULL,PASSWORD VARCHAR(255) NOT NULL,IS_SUPERUSER BOOLEAN NOT NULL,USER_DATA CLOB(8096),CONSTRAINT UK3G1J96G94XPK3LPXL2QBL985X UNIQUE(NAME));
CREATE TABLE TF_GRAPH_DATA(ID BIGINT NOT NULL PRIMARY KEY,LAST_UPDATED TIMESTAMP NOT NULL,UPDATE_COUNT INTEGER NOT NULL,DESCRIPTION VARCHAR(255),NAME VARCHAR(255) NOT NULL,GRAPH_DATA VARBINARY(2147483647),CONSTRAINT UK_7FP6KC9V42UA7B2DWRNQ5YIHT UNIQUE(NAME));
ALTER TABLE EXEC_REPORTS ADD CONSTRAINT FKFN47LJ607GHTT1LFIE8ADEVXC FOREIGN KEY(ACTOR_ID) REFERENCES USERS(ID);
ALTER TABLE EXEC_REPORTS ADD CONSTRAINT FKN47TA2B6E9WIH8B97OUBXVD3S FOREIGN KEY(REPORT_ID) REFERENCES REPORTS(ID);
ALTER TABLE EXEC_REPORTS ADD CONSTRAINT FK1CELHYPJ9VINT37EOBSN22S1B FOREIGN KEY(VIEWER_ID) REFERENCES USERS(ID);
ALTER TABLE FIX_SESSION_ATTRIBUTES ADD CONSTRAINT FK3LRQYAMU7790PIE2IVJH8VFQ5 FOREIGN KEY(FIX_SESSION_ID) REFERENCES FIX_SESSIONS(ID);
ALTER TABLE ORDER_STATUS ADD CONSTRAINT FKLXKG9IL8Q8K9448O5NGGIBNBS FOREIGN KEY(ACTOR_ID) REFERENCES USERS(ID);
ALTER TABLE ORDER_STATUS ADD CONSTRAINT FKJQTX22V71DOD89THT0FYWAV7 FOREIGN KEY(REPORT_ID) REFERENCES REPORTS(ID);
ALTER TABLE ORDER_STATUS ADD CONSTRAINT FKT8IYSRML49HNMEMBW8PKV5G3N FOREIGN KEY(VIEWER_ID) REFERENCES USERS(ID);
ALTER TABLE OUTGOING_MESSAGES ADD CONSTRAINT FKPKYA7XSUMLSBFM4B125K07KE8 FOREIGN KEY(ACTOR_ID) REFERENCES USERS(ID);
ALTER TABLE REPORTS ADD CONSTRAINT FKH0R6PPU75BYN1Y7Y0UITEEL8Q FOREIGN KEY(ACTOR_ID) REFERENCES USERS(ID);
ALTER TABLE REPORTS ADD CONSTRAINT FKSFC0WDPJFEROHMPYLYGFF4URS FOREIGN KEY(VIEWER_ID) REFERENCES USERS(ID);
ALTER TABLE ROLES_USERS ADD CONSTRAINT FKJDAU0SN88GJ3B7OIYM39QAYMK FOREIGN KEY(SUBJECTS_ID) REFERENCES USERS(ID);
ALTER TABLE SUPERVISOR_PERMISSIONS ADD CONSTRAINT FKF7MXSACK9D04S94A2AHA7JYR9 FOREIGN KEY(USER_ID) REFERENCES USERS(ID);
ALTER TABLE SUPERVISOR_PERMISSIONS_USERS ADD CONSTRAINT FKL8HK9CJ6MAVQ8OQVUN76XL3AG FOREIGN KEY(SUBJECTS_ID) REFERENCES USERS(ID);
ALTER TABLE USER_ATTRIBUTES ADD CONSTRAINT FKSKW1X6G2KT3G0I9507K4A4TQW FOREIGN KEY(USER_ID) REFERENCES USERS(ID);
ALTER SEQUENCE HIBERNATE_SEQUENCE RESTART WITH 120;
INSERT INTO "FLYWAY_SCHEMA_HISTORY"("installed_rank","version","description","type","script","checksum","installed_by","installed_on","execution_time","success") VALUES(1,'100','Base version','SQL','V100__Base_version.sql',0,'metc','2020-11-22 09:55:41.461000',3,'1');
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(45,'2020-11-22 09:55:52.193000',0,NULL,'','(Optional) Your subID as associated with this FIX session','SenderSubID','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(46,'2020-11-22 09:55:52.195000',0,NULL,'','(Optional) Your locationID as associated with this FIX session','SenderLocationID','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(47,'2020-11-22 09:55:52.198000',0,NULL,'','(Optional) counterparty''s subID as associated with this FIX session','TargetSubID','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(48,'2020-11-22 09:55:52.201000',0,NULL,'','(Optional) counterparty''s locationID as associated with this FIX session','TargetLocationID','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(49,'2020-11-22 09:55:52.203000',0,NULL,'','Additional qualifier to disambiguate otherwise identical sessions. This can only be used with initiator sessions.Note: See Special notes for Oracle.','SessionQualifier','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(50,'2020-11-22 09:55:52.206000',0,NULL,'','Required only for FIXT 1.1 (and newer). Ignored for earlier transport versions. Specifies the default application version ID for the session. This can either be the ApplVerID enum (see the ApplVerID field) the beginString for the default version.','DefaultApplVerID','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(51,'2020-11-22 09:55:52.208000',0,NULL,'Y','Determines if milliseconds should be added to timestamps. Only available for FIX.4.2 and greater.','MillisecondsInTimeStamp','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(52,'2020-11-22 09:55:52.211000',0,NULL,'N','Use actual end of sequence gap for resend requests rather than using ''''infinity'''' as the end sequence of the gap. Not recommended by the FIX specification, but needed for some counterparties.','ClosedResendInterval','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(53,'2020-11-22 09:55:52.214000',0,NULL,'Y','Tell session whether or not to expect a data dictionary. You should always use a DataDictionary if you are using repeating groups.','UseDataDictionary','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(54,'2020-11-22 09:55:52.218000',0,NULL,'FIX42.xml','XML definition file for validating incoming FIX messages. If no DataDictionary is supplied, only basic message validation will be done. This setting should only be used with FIX transport versions old than FIXT 1.1. See TransportDataDictionary and ApplicationDataDictionary for FIXT 1.1 settings.','DataDictionary','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(55,'2020-11-22 09:55:52.220000',0,NULL,'','XML definition file for validating admin (transport) messages. This setting is only valid for the FIXT 1.1 (or newer) sessions. See DataDictionary for older transport versions (FIX 4.0-4.4) and for additional information.','TransportDataDictionary','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(56,'2020-11-22 09:55:52.227000',0,NULL,'','XML definition file for validating application messages. This setting is only valid for the FIXT 1.1 (or newer) sessions. See DataDictionary for older transport versions (FIX 4.0-4.4) and for additional information. This setting supports the possibility of a custom application data dictionary for each session. This setting would only be used with FIXT 1.1 and new transport protocols. This setting can be used as a prefix to specify multiple application dictionaries for the FIXT transport. For example: DefaultApplVerID=FIX.4.2 # For default application version ID AppDataDictionary=FIX42.xml # For nondefault application version ID # Use beginString suffix for app version AppDataDictionary.FIX.4.4=FIX44.xml This would use FIX42.xml for the default application version ID and FIX44.xml for any FIX 4.4 messages.','AppDataDictionary','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(57,'2020-11-22 09:55:52.229000',0,NULL,'Y','If set to N, fields that are out of order (i.e. body fields in the header, or header fields in the body) will not be rejected. Useful for connecting to systems which do not properly order fields.','ValidateFieldsOutOfOrder','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(58,'2020-11-22 09:55:52.232000',0,NULL,'Y','If set to N, fields without values (empty) will not be rejected. Useful for connecting to systems which improperly send empty tags.','ValidateFieldsHaveValues','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(59,'2020-11-22 09:55:52.235000',0,NULL,'Y','If set to N, user defined fields will not be rejected if they are not defined in the data dictionary, or are present in messages they do not belong to.','ValidateUserDefinedFields','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(60,'2020-11-22 09:55:52.239000',0,NULL,'Y','Session validation setting for enabling whether field ordering is * validated. Values are ''''Y'''' or ''''N''''. Default is ''''Y''''.','ValidateUnorderedGroupFields','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(61,'2020-11-22 09:55:52.242000',0,NULL,'Y','Allow to bypass the message validation (against the dictionary). Default is ''''Y''''.','ValidateIncomingMessage','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(62,'2020-11-22 09:55:52.245000',0,NULL,'Y','Check the next expected target SeqNum against the received SeqNum. Default is ''''Y''''. If enabled and a mismatch is detected, apply the following logic:if lower than expected SeqNum , logout if higher, send a resend request If not enabled and a mismatch is detected, nothing is done. Must be enabled for EnableNextExpectedMsgSeqNum to work.','ValidateSequenceNumbers','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(63,'2020-11-22 09:55:52.248000',0,NULL,'N','Allow unknown fields in messages. This is intended for unknown fields with tags lt 5000 (not user defined fields). Use ValidateUserDefinedFields for controlling validation of tags ge 5000.','AllowUnknownMsgFields','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(64,'2020-11-22 09:55:52.250000',0,NULL,'Y','If set to Y, messages must be received from the counterparty with the correct SenderCompID and TargetCompID. Some systems will send you different CompIDs by design, so you must set this to N.','CheckCompID','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(65,'2020-11-22 09:55:52.253000',0,NULL,'Y','If set to Y, messages must be received from the counterparty within a defined number of seconds (see MaxLatency). It is useful to turn this off if a system uses localtime for its timestamps instead of GMT.','CheckLatency','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(66,'2020-11-22 09:55:52.260000',0,NULL,'120','If CheckLatency is set to Y, this defines the number of seconds latency allowed for a message to be processed.','MaxLatency','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(67,'2020-11-22 09:55:52.266000',0,NULL,'Y','If RejectInvalidMessage is set to N, only a warning will be logged on reception of message that fails data dictionary validation.','RejectInvalidMessage','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(68,'2020-11-22 09:55:52.270000',0,NULL,'N','If this configuration is enabled, an uncaught Exception or Error in the application''s message processing will lead to a (BusinessMessage)Reject being sent to the counterparty and the incoming message sequence number will be incremented. If disabled (default), the problematic incoming message is discarded and the message sequence number is not incremented. Processing of the next valid message will cause detection of a sequence gap and a ResendRequest will be generated.','RejectMessageOnUnhandledException','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(69,'2020-11-22 09:55:52.272000',0,NULL,'Y','If RequiresOrigSendingTime is set to N, PossDup messages lacking that field will not be rejected.','RequiresOrigSendingTime','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(70,'2020-11-22 09:55:52.275000',0,NULL,'30','Time between reconnection attempts in seconds. Only used for initiators','ReconnectInterval','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(71,'2020-11-22 09:55:52.278000',0,NULL,'30','Heartbeat interval in seconds. Only used for initiators.','HeartBtInt','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(72,'2020-11-22 09:55:52.281000',0,NULL,'10','Number of seconds to wait for a logon response before disconnecting.','LogonTimeout','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(73,'2020-11-22 09:55:52.284000',0,NULL,'2','Number of seconds to wait for a logout response before disconnecting.','LogoutTimeout','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(74,'2020-11-22 09:55:52.296000',0,NULL,'TCP','Specifies the initiator communication protocol. The SocketConnectHost is not used with the VM_PIPE protocol, but the SocketConnectPort is significant and must match the acceptor configuration.','SocketConnectProtocol','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(75,'2020-11-22 09:55:52.299000',0,NULL,'','Bind the local socket to this port. Only used with a SocketInitiator. If unset the socket will be bound to a free port from the ephemeral port range.','SocketLocalPort','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(76,'2020-11-22 09:55:52.303000',0,NULL,'','Bind the local socket to this host. Only used with a SocketAcceptor. If unset the socket will be bound to all local interfaces.','SocketLocalHost','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(77,'2020-11-22 09:55:52.305000',0,NULL,'TCP','Specifies the acceptor communication protocol. The SocketAcceptAddress is not used with the VM_PIPE protocol, but the SocketAcceptPort is significant and must match the initiator configuration.','SocketAcceptProtocol','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(78,'2020-11-22 09:55:52.308000',0,'Enter ''Y'' or ''N''','Y','Refresh the session state when a logon is received. This allows a simple form of failover when the message store data is persistent. The option will be ignored for message stores that are not persistent (e.g., MemoryStore).','RefreshOnLogon','^(Y|N){1}$',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(79,'2020-11-22 09:55:52.311000',0,NULL,'N','Enables SSL usage for QFJ acceptor or initiator.','SocketUseSSL','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(80,'2020-11-22 09:55:52.314000',0,NULL,'','KeyStore to use with SSL','SocketKeyStore','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(81,'2020-11-22 09:55:52.328000',0,NULL,'','KeyStore password','SocketKeyStorePassword','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(82,'2020-11-22 09:55:52.332000',0,NULL,'','When the keepalive option is set for a TCP socket and no data has been exchanged across the socket in either direction for 2 hours (NOTE: the actual value is implementation dependent), TCP automatically sends a keepalive probe to the peer. This probe is a TCP segment to which the peer must respond. One of three responses is expected: The peer responds with the expected ACK. The application is not notified (since everything is OK). TCP will send another probe following another 2 hours of inactivity. The peer responds with an RST, which tells the local TCP that the peer host has crashed and rebooted. The socket is closed. There is no response from the peer. The socket is closed. The purpose of this option is to detect if the peer host crashes.','SocketKeepAlive','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(83,'2020-11-22 09:55:52.336000',0,NULL,'','When the OOBINLINE option is set, any TCP urgent data received on the socket will be received through the socket input stream. When the option is disabled (which is the default) urgent data is silently discarded.','SocketOobInline','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(84,'2020-11-22 09:55:52.342000',0,NULL,'','Set a hint the size of the underlying buffers used by the platform for incoming network I/O. When used in set, this is a suggestion to the kernel from the application about the size of buffers to use for the data to be received over the socket.','SocketReceiveBufferSize','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(85,'2020-11-22 09:55:52.344000',0,NULL,'','Sets SO_REUSEADDR for a socket. This is used only for MulticastSockets in java, and it is set by default for MulticastSockets.','SocketReuseAddress','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(86,'2020-11-22 09:55:52.346000',0,NULL,'','Set a hint the size of the underlying buffers used by the platform for outgoing network I/O. When used in set, this is a suggestion to the kernel from the application about the size of buffers to use for the data to be sent over the socket.','SocketSendBufferSize','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(87,'2020-11-22 09:55:52.348000',0,NULL,'','Specify a linger-on-close timeout. This option disables/enables immediate return from a close() of a TCP Socket. Enabling this option with a non-zero Integer timeout means that a close() will block pending the transmission and acknowledgement of all data written to the peer, at which point the socket is closed gracefully. Upon reaching the linger timeout, the socket is closed forcefully, with a TCP RST. Enabling the option with a timeout of zero does a forceful close immediately. If the specified timeout value exceeds 65,535 it will be reduced to 65,535.','SocketLinger','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(88,'2020-11-22 09:55:52.351000',0,NULL,'Y','Disable Nagle''s algorithm for this connection. Written data to the network is not buffered pending acknowledgement of previously written data.','SocketTcpNoDelay','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(89,'2020-11-22 09:55:52.362000',0,NULL,'','Sets traffic class or type-of-service octet in the IP header for packets sent from this Socket. As the underlying network implementation may ignore this value applications should consider it a hint. The tc must be in the range 0 = tc = 255 or an IllegalArgumentException will be thrown. Notes: for Internet Protocol v4 the value consists of an octet with precedence and TOS fields as detailed in RFC 1349. The TOS field is bitset created by bitwise-or''ing values such the following :- IPTOS_LOWCOST (0x02) IPTOS_RELIABILITY (0x04) IPTOS_THROUGHPUT (0x08) IPTOS_LOWDELAY (0x10) The last low order bit is always ignored as this corresponds to the MBZ (must be zero) bit. Setting bits in the precedence field may result in a SocketException indicating that the operation is not permitted.','SocketTrafficClass','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(90,'2020-11-22 09:55:52.365000',0,NULL,'N','Write messages synchronously. This is not generally recommended as it may result in performance degradation. The MINA communication layer is asynchronous by design, but this option will override that behavior if needed.','SocketSynchronousWrites','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(91,'2020-11-22 09:55:52.369000',0,NULL,'30000','The time in milliseconds to wait for a write to complete.','SocketSynchronousWriteTimeout','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(92,'2020-11-22 09:55:52.371000',0,NULL,'Y','If set to N, no messages will be persisted. This will force QFJ to always send GapFills instead of resending messages. Use this if you know you never want to resend a message. Useful for market data streams.','PersistMessages','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(93,'2020-11-22 09:55:52.374000',0,NULL,'N','Controls whether milliseconds are included in log time stamps.','FileIncludeMilliseconds','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(94,'2020-11-22 09:55:52.376000',0,NULL,'N','Controls whether time stamps are included on message log entries.','FileIncludeTimestampForMessages','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(95,'2020-11-22 09:55:52.392000',0,NULL,'quickfixj.event','Log category for logged events.','SLF4JLogEventCategory','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(96,'2020-11-22 09:55:52.395000',0,NULL,'quickfixj.msg.incoming','Log category for incoming messages.','SLF4JLogIncomingMessageCategory','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(97,'2020-11-22 09:55:52.398000',0,NULL,'quickfixj.msg.outgoing','Log category for outgoing messages.','SLF4JLogOutgoingMessageCategory','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(98,'2020-11-22 09:55:52.404000',0,NULL,'Y','Controls whether session ID is prepended to log message.','SLF4JLogPrependSessionID','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(99,'2020-11-22 09:55:52.406000',0,NULL,'N','Controls whether heartbeats are logged.','SLF4JLogHeartbeats','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(100,'2020-11-22 09:55:52.408000',0,NULL,'Y','Log events to screen.','ScreenLogEvents','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(101,'2020-11-22 09:55:52.414000',0,NULL,'Y','Log incoming messages to screen.','ScreenLogShowIncoming','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(102,'2020-11-22 09:55:52.417000',0,NULL,'Y','Log outgoing messages to screen.','ScreenLogShowOutgoing','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(103,'2020-11-22 09:55:52.423000',0,NULL,'N','Filter heartbeats from output (both incoming and outgoing)','ScreenLogShowHeartbeats','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(104,'2020-11-22 09:55:52.431000',0,NULL,'N','Determines if sequence numbers should be reset before sending/receiving a logon request.','ResetOnLogon','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(105,'2020-11-22 09:55:52.434000',0,NULL,'N','Determines if sequence numbers should be reset to 1 after a normal logout termination.','ResetOnLogout','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(106,'2020-11-22 09:55:52.436000',0,NULL,'N','Determines if sequence numbers should be reset to 1 after an abnormal termination.','ResetOnDisconnect','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(107,'2020-11-22 09:55:52.438000',0,NULL,'N','Session setting for doing an automatic reset when an error occurs. A reset means disconnect, sequence numbers reset, store cleaned and reconnect, as for a daily reset.','ResetOnError','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(108,'2020-11-22 09:55:52.441000',0,NULL,'N','Session setting for doing an automatic disconnect when an error occurs.','DisconnectOnError','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(109,'2020-11-22 09:55:52.452000',0,NULL,'N','Add tag LastMsgSeqNumProcessed in the header (optional tag 369).','EnableLastMsgSeqNumProcessed','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(110,'2020-11-22 09:55:52.455000',0,NULL,'N','Add tag NextExpectedMsgSeqNum (optional tag 789) on the sent Logon message and use value of tag 789 on received Logon message to synchronize session. This should not be enabled for FIX versions lt 4.4. Only works when ValidateSequenceNumbers is enabled.','EnableNextExpectedMsgSeqNum','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(111,'2020-11-22 09:55:52.457000',0,NULL,'0','Setting to limit the size of a resend request in case of missing messages. This is useful when the remote FIX engine does not allow to ask for more than n message for a ResendRequest. E.g. if the ResendRequestChunkSize is set to 5 and a gap of 7 messages is detected, a first resend request will be sent for 5 messages. When this gap has been filled, another resend request for 2 messages will be sent. If the ResendRequestChunkSize is set to 0, only one ResendRequest for all the missing messages will be sent.','ResendRequestChunkSize','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(112,'2020-11-22 09:55:52.460000',0,NULL,'N','Continue initializing sessions if an error occurs.','ContinueInitializationOnError','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(113,'2020-11-22 09:55:52.465000',0,NULL,'N','Allows sending of redundant resend requests.','SendRedundantResendRequests','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(114,'2020-11-22 09:55:52.468000',0,NULL,'0.5','Fraction of the heartbeat interval which defines the additional time to wait if a TestRequest sent after a missing heartbeat times out.','TestRequestDelayMultiplier','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(115,'2020-11-22 09:55:52.470000',0,NULL,'N','Heartbeat detection is disabled. A disconnect due to a missing heartbeat will never occur.','DisableHeartBeatCheck','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(116,'2020-11-22 09:55:52.472000',0,NULL,'N','Fill in heartbeats on resend when reading from message store fails.','ForceResendWhenCorruptedStore','',FALSE);
INSERT INTO FIX_SESSION_ATTR_DSCRPTRS(ID,LAST_UPDATED,UPDATE_COUNT,ADVICE,DEFAULT_VALUE,DESCRIPTION,NAME,PATTERN,REQUIRED) VALUES(117,'2020-11-22 09:55:52.474000',0,NULL,'','Name of the session modifiers to apply to this session','org.marketcetera.sessioncustomization','',FALSE);
INSERT INTO FIX_SESSIONS(ID,LAST_UPDATED,UPDATE_COUNT,AFFINITY,BROKER_ID,DESCRIPTION,HOST,ACCEPTOR,DELETED,ENABLED,NAME,PORT,SESSION_ID) VALUES(44,'2020-11-22 09:55:51.763000',1,1,'exsim',NULL,'exchange.marketcetera.com',FALSE,FALSE,TRUE,'MATP Exchange Simulator',7001,'FIXT.1.1:test-sender-comp-id->MRKTC-EXCH');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'FIX50SP2.xml','AppDataDictionary');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'FIXT.1.1','BeginString');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'initiator','ConnectionType');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'9','DefaultApplVerID');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'22:45:00','EndTime');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'30','HeartBtInt');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'30','ReconnectInterval');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'Y','RefreshOnLogon');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'N','ResetOnDisconnect');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'N','ResetOnError');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'Y','ResetOnLogon');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'N','ResetOnLogout');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'N','SLF4JLogHeartbeats');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'test-sender-comp-id','SenderCompID');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'00:00:00','StartTime');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'MRKTC-EXCH','TargetCompID');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'US/Pacific','TimeZone');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'FIXT11.xml','TransportDataDictionary');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'Y','UseDataDictionary');
INSERT INTO FIX_SESSION_ATTRIBUTES(FIX_SESSION_ID,VALUE,NAME) VALUES(44,'sessionCustomizationAlgoTagsOnly','org.marketcetera.sessioncustomization');
INSERT INTO MESSAGE_STORE_MESSAGES(ID,LAST_UPDATED,UPDATE_COUNT,SESSION_ID,MESSAGE,MSG_SEQ_NUM) VALUES(119,'2020-11-22 09:55:54.410000',0,'FIXT.1.1:test-sender-comp-id->MRKTC-EXCH','8=FIXT.1.1\u00019=95\u000135=A\u000134=1\u000149=test-sender-comp-id\u000152=20201122-17:55:54.178\u000156=MRKTC-EXCH\u000198=0\u0001108=30\u0001141=Y\u00011137=9\u000110=065\u0001',1);
INSERT INTO MESSAGE_STORE_SESSIONS(ID,LAST_UPDATED,UPDATE_COUNT,SESSION_ID,CREATION_TIME,SENDER_SEQ_NUM,TARGET_SEQ_NUM) VALUES(118,'2020-11-22 09:55:54.466000',4,'FIXT.1.1:test-sender-comp-id->MRKTC-EXCH','2020-11-22 09:55:54.387000',2,2);
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(4,'2020-11-22 09:55:46.277000',0,'Access to Add Session action','AddSessionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(5,'2020-11-22 09:55:46.294000',0,'Access to Delete Session action','DeleteSessionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(6,'2020-11-22 09:55:46.301000',0,'Access to disable session action','DisableSessionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(7,'2020-11-22 09:55:46.307000',0,'Access to edit session action','EditSessionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(8,'2020-11-22 09:55:46.316000',0,'Access to enable session action','EnableSessionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(9,'2020-11-22 09:55:46.323000',0,'Access to update sequence numbers action','UpdateSequenceAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(10,'2020-11-22 09:55:46.330000',0,'Access to start session action','StartSessionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(11,'2020-11-22 09:55:46.337000',0,'Access to stop session action','StopSessionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(12,'2020-11-22 09:55:46.345000',0,'Access to view session action','ViewSessionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(13,'2020-11-22 09:55:46.351000',0,'Access to read instance data action','ReadInstanceDataAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(14,'2020-11-22 09:55:46.360000',0,'Access to read FIX session attribute descriptors action','ReadFixSessionAttributeDescriptorsAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(15,'2020-11-22 09:55:46.368000',0,'Access to create user action','CreateUserAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(16,'2020-11-22 09:55:46.376000',0,'Access to read user action','ReadUserAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(17,'2020-11-22 09:55:46.387000',0,'Access to update user action','UpdateUserAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(18,'2020-11-22 09:55:46.395000',0,'Access to delete user action','DeleteUserAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(19,'2020-11-22 09:55:46.402000',0,'Access to change user password action','ChangeUserPasswordAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(20,'2020-11-22 09:55:46.407000',0,'Access to read user permissions action','ReadUserPermisionsAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(21,'2020-11-22 09:55:46.414000',0,'Access to create permission action','CreatePermissionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(22,'2020-11-22 09:55:46.421000',0,'Access to read permission action','ReadPermissionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(23,'2020-11-22 09:55:46.429000',0,'Access to update permission action','UpdatePermissionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(24,'2020-11-22 09:55:46.436000',0,'Access to delete permission action','DeletePermissionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(25,'2020-11-22 09:55:46.450000',0,'Access to create role action','CreateRoleAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(26,'2020-11-22 09:55:46.460000',0,'Access to read role action','ReadRoleAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(27,'2020-11-22 09:55:46.467000',0,'Access to update role action','UpdateRoleAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(28,'2020-11-22 09:55:46.472000',0,'Access to delete role action','DeleteRoleAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(29,'2020-11-22 09:55:46.483000',0,'Access to view broker status action','ViewBrokerStatusAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(30,'2020-11-22 09:55:46.492000',0,'Access to view open orders action','ViewOpenOrdersAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(31,'2020-11-22 09:55:46.497000',0,'Access to view reports action','ViewReportAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(32,'2020-11-22 09:55:46.503000',0,'Access to view positions action','ViewPositionAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(33,'2020-11-22 09:55:46.509000',0,'Access to send new orders action','SendOrderAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(34,'2020-11-22 09:55:46.515000',0,'Access to view user data action','ViewUserDataAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(35,'2020-11-22 09:55:46.521000',0,'Access to write user data action','WriteUserDataAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(36,'2020-11-22 09:55:46.531000',0,'Access to manually add new reports action','AddReportAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(37,'2020-11-22 09:55:46.539000',0,'Access to manually delete reports action','DeleteReportAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(38,'2020-11-22 09:55:46.548000',0,'Access to read a user attribute action','ReadUserAttributeAction');
INSERT INTO PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(39,'2020-11-22 09:55:46.557000',0,'Access to write a user attribute action','WriteUserAttributeAction');
INSERT INTO ROLES(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(40,'2020-11-22 09:55:46.710000',0,'Admin role','Admin');
INSERT INTO ROLES(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(41,'2020-11-22 09:55:46.824000',0,'Trader role','Trader');
INSERT INTO ROLES(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME) VALUES(42,'2020-11-22 09:55:46.892000',0,'Trader Admin role','TraderAdmin');
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,4);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,5);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,6);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,7);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,8);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,9);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,10);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,11);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,12);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,13);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,14);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,15);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,16);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,17);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,18);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,19);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,20);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,21);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,22);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,23);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,24);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,25);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,26);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,27);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,28);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,29);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,34);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,35);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,38);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(40,39);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,29);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,30);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,31);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,32);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,33);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,34);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,35);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,36);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,38);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(41,39);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,29);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,30);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,31);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,32);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,33);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,34);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,35);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,36);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,37);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,38);
INSERT INTO ROLES_PERMISSIONS(ROLES_ID,PERMISSIONS_ID) VALUES(42,39);
INSERT INTO USERS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME,IS_ACTIVE,PASSWORD,IS_SUPERUSER,USER_DATA) VALUES(1,'2020-11-22 09:55:46.189000',0,'Trader user','trader',TRUE,'2zg91043ou3eki4ysbejwwgkci37e6j',FALSE,NULL);
INSERT INTO USERS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME,IS_ACTIVE,PASSWORD,IS_SUPERUSER,USER_DATA) VALUES(2,'2020-11-22 09:55:46.256000',0,'Trader Admin user','traderAdmin',TRUE,'210ui1dyyf6voajrad4gmpt3vgvvm9o',FALSE,NULL);
INSERT INTO USERS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME,IS_ACTIVE,PASSWORD,IS_SUPERUSER,USER_DATA) VALUES(3,'2020-11-22 09:55:46.265000',0,'Admin user','admin',TRUE,'6anqbgybi82pveayzrkt3egjkwfwdg5',TRUE,NULL);
INSERT INTO ROLES_USERS(ROLE_ID,SUBJECTS_ID) VALUES(40,3);
INSERT INTO ROLES_USERS(ROLE_ID,SUBJECTS_ID) VALUES(41,1);
INSERT INTO ROLES_USERS(ROLE_ID,SUBJECTS_ID) VALUES(42,2);
INSERT INTO SUPERVISOR_PERMISSIONS(ID,LAST_UPDATED,UPDATE_COUNT,DESCRIPTION,NAME,USER_ID) VALUES(43,'2020-11-22 09:55:46.990000',0,'Trader supervisor role','TraderSupervisor',2);
INSERT INTO SUPERVISOR_PERMISSIONS_PERMISSIONS(SUPERVISORPERMISSION_ID,PERMISSIONS_ID) VALUES(43,29);
INSERT INTO SUPERVISOR_PERMISSIONS_PERMISSIONS(SUPERVISORPERMISSION_ID,PERMISSIONS_ID) VALUES(43,30);
INSERT INTO SUPERVISOR_PERMISSIONS_PERMISSIONS(SUPERVISORPERMISSION_ID,PERMISSIONS_ID) VALUES(43,31);
INSERT INTO SUPERVISOR_PERMISSIONS_PERMISSIONS(SUPERVISORPERMISSION_ID,PERMISSIONS_ID) VALUES(43,32);
INSERT INTO SUPERVISOR_PERMISSIONS_PERMISSIONS(SUPERVISORPERMISSION_ID,PERMISSIONS_ID) VALUES(43,34);
INSERT INTO SUPERVISOR_PERMISSIONS_USERS(SUPERVISORPERMISSION_ID,SUBJECTS_ID) VALUES(43,1);
