//
// this file is automatically generated
//
package org.marketcetera.eventbus.event;

import org.marketcetera.core.Preserve;

/* $License$ */

/**
 * Provides common behavior for Eventbus services.
 *
 * @author <a href="mailto:colin@marketcetera.com">Colin DuPlantis</a>
 * @version $Id$
 * @since $Release$
 */
@Preserve
public abstract class EventbusRpcUtil
{
    /**
     * Get the RPC object from the given value.
     *
     * @param inEvent a <code>org.marketcetera.eventbus.event.Event</code> value
     * @return a java.util.Optional<EventbusTypesRpc.Event> value
     */
    public static java.util.Optional<EventbusTypesRpc.Event> getRpcEvent(org.marketcetera.eventbus.event.Event inEvent)
    {
        if(inEvent == null) {
            return java.util.Optional.empty();
        }
        EventbusTypesRpc.Event.Builder builder = EventbusTypesRpc.Event.newBuilder();
        builder.setEventId(inEvent.getEventId());
        org.marketcetera.rpc.base.BaseRpcUtil.getTimestampValue(inEvent.getTimestamp()).ifPresent(value->builder.setTimestamp(value));
        builder.setType(inEvent.getType());
        builder.setData1(inEvent.getData1());
        builder.setData2(inEvent.getData2());
        builder.setData3(inEvent.getData3());
        builder.setData4(inEvent.getData4());
        builder.setData5(inEvent.getData5());
        return java.util.Optional.of(builder.build());
    }
    /**
     * Get the object from the given RPC value.
     *
     * @param inEvent an <code>org.marketcetera.eventbus.event.EventbusTypesRpc.Event</code> value
     * @param inEventFactory an <code>org.marketcetera.eventbus.event.EventFactory</code> value
     * @return an org.marketcetera.eventbus.event.Event value
     */
    public static java.util.Optional<org.marketcetera.eventbus.event.Event> getEvent(org.marketcetera.eventbus.event.EventbusTypesRpc.Event inEvent,org.marketcetera.eventbus.event.EventFactory inEventFactory)
    {
        if(inEvent == null) {
            return java.util.Optional.empty();
        }
        org.marketcetera.eventbus.event.Event event = inEventFactory.create();
        event.setEventId(inEvent.getEventId());
        org.marketcetera.rpc.base.BaseRpcUtil.getDateValue(inEvent.getTimestamp()).ifPresent(value->event.setTimestamp(value));
        event.setType(inEvent.getType());
        event.setData1(inEvent.getData1());
        event.setData2(inEvent.getData2());
        event.setData3(inEvent.getData3());
        event.setData4(inEvent.getData4());
        event.setData5(inEvent.getData5());
        return java.util.Optional.of(event);
    }
}
