<?xml version="1.0" encoding="UTF-8" ?>
<!--
- Author: anshul@marketcetera.com
- Since: 0.9.0
- Version: $Id$
- $License$
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.marketcetera</groupId>
    <artifactId>public-parent</artifactId>
    <version>3.0.11</version>
  </parent>
  <artifactId>strategyagent</artifactId>
  <packaging>jar</packaging>
  <name>Strategy Agent</name>
  <dependencies>
    <!-- Compile. -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>saclient</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>client</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>remote-receiver</artifactId>
    </dependency>
    <!-- Compile: log4j is invoked directly, not via slf4j. -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <scope>compile</scope>
    </dependency>
    <!-- Runtime. -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>marketdata-core</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http-jetty</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.mina</groupId>
      <artifactId>mina-core</artifactId>
    </dependency>
    <!-- Testing. -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>core</artifactId>
      <type>test-jar</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>marketdata-exsim</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>cep-system</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>cep-esper</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>client</artifactId>
      <type>test-jar</type>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>util-test</artifactId>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>strategy</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <finalName>strategyengine</finalName>
          <descriptors>
            <descriptor>assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/output</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <includeScope>runtime</includeScope>
              <excludeScope>test</excludeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <disableXmlReport>false</disableXmlReport>
          <forkCount>1</forkCount>
          <reuseForks>false</reuseForks>
          <argLine>${mvn.test.options}</argLine>
          <systemPropertyVariables>
            <org.marketcetera.appDir>src/test/sample_data</org.marketcetera.appDir>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>META-INF/metc_version.properties</exclude>
        </excludes>
        <filtering>false</filtering>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <includes>
          <include>META-INF/metc_version.properties</include>
        </includes>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>
  <profiles>
    <!-- Command-line execution. -->
    <profile>
      <id>execute</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <configuration>
              <systemProperties>
                <systemProperty>
                  <key>org.marketcetera.appDir</key>
                  <value>src/test/cmd_exec</value>
                </systemProperty>
                <systemProperty>
                  <key>log4j.configurationFile</key>
                  <value>src/test/cmd_exec/conf/log4j2.xml</value>
                </systemProperty>
                <systemProperty>
                  <key>Log4jContextSelector</key>
                  <value>org.apache.logging.log4j.core.async.AsyncLoggerContextSelector</value>
                </systemProperty>
              </systemProperties>
              <mainClass>org.marketcetera.core.ApplicationContainer</mainClass>
              <arguments>
                <argument>src/test/cmd_exec/inputs/sampleCommands.txt</argument>
              </arguments>
              <classpathScope>test</classpathScope>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>executeSample</id>
      <properties>
        <sampleName>HelloWorld.txt</sampleName>
        <language>ruby</language>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <configuration>
              <executable>${java.home}/bin/java</executable>
              <arguments>
                <argument>-Dorg.marketcetera.appDir=.</argument>
                <argument>-Dlog4j.configurationFile=${project.basedir}/src/test/cmd_exec/conf/log4j2.xml</argument>
                <argument>-DLog4jContextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector</argument>
                <argument>-classpath</argument>
                <classpath/>
                <argument>org.marketcetera.core.ApplicationContainer</argument>
                <argument>samples/${language}/inputs/${sampleName}</argument>
              </arguments>
              <workingDirectory>src/test/cmd_exec</workingDirectory>
              <classpathScope>test</classpathScope>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
