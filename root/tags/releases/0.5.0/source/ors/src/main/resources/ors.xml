<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">
    <!--
    || ActiveMQ Broker
    -->
    <bean id="broker" class="org.apache.activemq.xbean.BrokerFactoryBean">
        <property name="config" value="classpath:broker.xml"/>
    </bean>

    <bean id="requestQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="ors-commands"/>
    </bean>

    <bean id="replyTopic" class="org.apache.activemq.command.ActiveMQTopic">
        <constructor-arg value="ors-messages"/>
    </bean>

    <bean id="tradeRecorderQueue" class="org.apache.activemq.command.ActiveMQQueue">
        <constructor-arg value="trade-recorder"/>
    </bean>

    <bean
     id="connectionFactory"
     class="org.apache.activemq.ActiveMQConnectionFactory"
     depends-on="systemPropertiesSetter">
        <property name="brokerURL" value="${activemq.brokerUrl}"/>
        <property name="userName" ref="runtimeUsername"/>
        <property name="password" ref="runtimePassword"/>
    </bean>

    <!-- Spring JMS Template -->
    <bean id="outgoingJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory">
            <ref bean="pooledConnectionFactory"/>
        </property>
        <property name="messageConverter">
            <bean class="org.marketcetera.spring.JMSFIXMessageConverter"/>
        </property>
        <property name="defaultDestination" ref="replyTopic"/>
    </bean>

    <bean id="tradeRecorderJMSTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory">
            <ref bean="pooledConnectionFactory"/>
        </property>
        <property name="messageConverter">
            <bean class="org.marketcetera.spring.JMSFIXMessageConverter"/>
        </property>
        <property name="defaultDestination" ref="tradeRecorderQueue"/>
    </bean>

    <bean id="quickfixSender" class="org.marketcetera.quickfix.QuickFIXSender"/>

    <!-- *******************************************************
        | User-configurable session and senderCompID variables |
        *******************************************************  -->

    <!-- The argument order is as follows: FIX begin string, senderCompID, targetCompID [, sessionQualifier] -->
    <bean id="defaultSessionID" class="quickfix.SessionID">
        <constructor-arg ref="fixVersion"/>
        <constructor-arg value="${quickfix.senderCompId}"/>
        <constructor-arg value="${quickfix.targetCompId}"/>
    </bean>

    <bean id="fixVersionEnum" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
      <property name="staticField" value="org.marketcetera.quickfix.FIXVersion.FIX42"/>
    </bean>

    <bean id="fixDictionaryPath" factory-bean="fixVersionEnum" factory-method="getDataDictionaryURL"/>

    <!-- JDBC Setup for ID table -->
    <bean name="JdbcDriver" class="java.lang.String"><constructor-arg value="com.mysql.jdbc.Driver"/></bean>
    <bean name="JdbcURL" class="java.lang.String"><constructor-arg value="jdbc:mysql://localhost/marketcetera"/></bean>
    <bean name="JdbcUser" class="java.lang.String"><constructor-arg value="marketcetera"/></bean>
    <bean name="JdbcPassword" class="java.lang.String"><constructor-arg value="marketcetera"/></bean>

    <!-- Create an ID factory that reads next IDs from database -->
    <bean id="idFactory" class="org.marketcetera.core.DatabaseIDFactory">
        <constructor-arg ref="JdbcURL"/>
        <constructor-arg ref="JdbcDriver"/>
        <constructor-arg ref="JdbcUser"/>
        <constructor-arg ref="JdbcPassword"/>
    </bean>

    <!-- Location (host/port) of the FIX reciever we are connecting to -->
    <bean id="socketConnectHostValue" class="java.lang.String">
        <constructor-arg value="${quickfix.destination}"/>
    </bean>
    <bean id="socketConnectPortValue" class="java.lang.String">
        <constructor-arg value="${quickfix.port}"/>
    </bean>
</beans>
