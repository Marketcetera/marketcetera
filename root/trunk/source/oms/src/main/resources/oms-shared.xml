<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

    <bean id="listener" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
        <property name="delegate" ref="outgoingMessageHandler"/>
        <property name="defaultListenerMethod" value="handleMessage"/>
        <property name="defaultResponseDestination" ref="replyTopic"/>
        <property name="messageConverter">
            <bean class="org.marketcetera.spring.JMSFIXMessageConverter"/>
        </property>
    </bean>

    <!-- note that this needs to use the non-pooled connection factory -->
    <bean id="container" class="org.springframework.jms.listener.SimpleMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="messageListener" ref="listener"/>
        <property name="destination" ref="requestQueue"/>
    </bean>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="connectionFactory"/>
    </bean>

    <!-- Declare all the message modifiers that need to be applied to all outgoing messages -->
    <bean id="messageModifierMgr" class="org.marketcetera.oms.MessageModifierManager">
        <constructor-arg>
            <list>
                <ref bean="defaultMessageModifier"/>
            </list>
        </constructor-arg>
        <constructor-arg ref="fixMessageFactory"/>
    </bean>

    <!-- a thread safe non-pooled MessageListener -->
    <bean id="outgoingMessageHandler" class="org.marketcetera.oms.OutgoingMessageHandler" scope="prototype">
        <constructor-arg ref="fixMessageFactory"/>
        <constructor-arg ref="orderLimits"/>
        <constructor-arg ref="qfApplication"/>
        <property name="defaultSessionID" ref="defaultSessionID"/>
        <property name="orderRouteManager" ref="orderRouting"/>
        <property name="messageModifierMgr" ref="messageModifierMgr"/>
        <property name="quickFIXSender" ref="quickfixSender"/>
        <property name="idFactory" ref="idFactory"/>
    </bean>

    <bean id="fixVersion" factory-bean="fixVersionEnum" factory-method="toString"/>
    <bean id="fixMessageFactory" factory-bean="fixVersionEnum" factory-method="getMessageFactory"/>

    <!-- You can create a mapping between custom dictionary files and versions.
         When using a single version constructor sets that as the "current" FIXDataDictionary -->
    <bean id="fixDataDictionaryMgr" class="org.marketcetera.quickfix.FIXDataDictionaryManager" scope="singleton">
<!--
    To create multiple FIX mappings, use the following constructor
        <constructor-arg>
            <map>
                <entry key-ref="fixVersionEnum" value-ref="fixDictionaryPath"/>
            </map>
        </constructor-arg>
-->
        <constructor-arg ref="fixVersionEnum"/>
        <constructor-arg ref="fixDictionaryPath"/>
    </bean>

    <!-- MBean for managing OMS -->
    <bean id="omsAdmin" class="org.marketcetera.oms.mbeans.OMSAdmin">
        <constructor-arg ref="quickfixSender"/>
        <constructor-arg ref="fixMessageFactory"/>
        <constructor-arg ref="idFactory"/>
    </bean>
</beans>
