<?xml version="1.0" encoding="UTF-8" ?>

<!--
  - Author: tlerios@marketcetera.com
  - Since: 0.5.0
  - Version: $Id$
  - $License$
  -->

<project
 xmlns="http://maven.apache.org/POM/4.0.0"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.marketcetera</groupId>
    <artifactId>source</artifactId>
    <version>0.5.0</version>
  </parent>
  <artifactId>core</artifactId>
  <packaging>jar</packaging>

  <name>Core</name>

  <dependencies>

    <!-- Compile. -->
    <dependency>
      <groupId>${public.package}</groupId>
      <artifactId>util</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.activemq</groupId>
      <artifactId>activemq-core</artifactId>
    </dependency>
    <dependency>
      <groupId>quickfixj</groupId>
      <artifactId>quickfixj-core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.skife.kasparov</groupId>
      <artifactId>csv</artifactId>
    </dependency>
    <dependency>
      <groupId>net.java.dev.glazedlists</groupId>
      <artifactId>glazedlists_java15</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-i18n</groupId>
      <artifactId>commons-i18n</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
    </dependency>

    <!-- Compile: log4j is invoked directly, not via slf4j. -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- Runtime. -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </dependency>
    <dependency>
      <groupId>c3p0</groupId>
      <artifactId>c3p0</artifactId>
    </dependency>

    <!-- Testing. -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- Place tests into a jar for use during testing of other packages. -->
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Add custom build tool to generated Eclipse project. -->
      <plugin>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <additionalBuildcommands>
            <buildCommand>
              <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
              <triggers>auto,full,incremental,</triggers>
              <arguments>
                <LaunchConfigHandle>&lt;project&gt;/.externalToolBuilders/Copy Core Jar To Core Plugin dir.launch</LaunchConfigHandle>
              </arguments>
            </buildCommand>
            <buildCommand>
              <name>org.eclipse.ui.externaltools.ExternalToolBuilder</name>
              <triggers>auto,full,incremental,</triggers>
              <arguments>
                <LaunchConfigHandle>&lt;project&gt;/.externalToolBuilders/Copy Core Tests Jar To Core Tests Plugin dir.launch</LaunchConfigHandle>
              </arguments>
            </buildCommand>      
          </additionalBuildcommands>
        </configuration>
      </plugin>

      <!-- Database schema generator. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>hibernate3-maven-plugin</artifactId>
        <executions>
          <execution>
            <!-- In this phase, the persistence.xml file has been copied. -->
            <phase>process-test-resources</phase>
            <goals>
              <goal>hbm2ddl</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <components>
            <component>
              <name>hbm2ddl</name>
              <implementation>annotationconfiguration</implementation>
            </component>
          </components>
          <componentProperties>
            <implementation>jpaconfiguration</implementation>
            <persistenceunit>unit-testing</persistenceunit>
            <outputfilename>schema.sql</outputfilename>
            <jdk5>true</jdk5>
            <drop>false</drop>
            <create>true</create>
            <export>false</export>
            <format>true</format>
          </componentProperties>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>

    <!-- Copy generated jars into photon plugin area. -->
    <profile>
      <id>eclipse-folders</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>Copy Core Jar</id>
                <phase>package</phase>
                <configuration>
                  <tasks>
                    <property name="targetDir" value="../photon/plugins/org.marketcetera.core/" />
                    <copy file="target/core-${project.version}.jar" todir="${targetDir}" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>Copy Core Test Jar</id>
                <phase>compile</phase>
                <configuration>
                  <tasks>
                    <property name="targetDirTests" value="../photon/plugins/org.marketcetera.core.tests/" />
                    <copy file="target/core-${project.version}-tests.jar" todir="${targetDirTests}" />
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>  
    </profile>
  </profiles>
</project>
