### direct log messages to stdout ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p [%t] %c{3} (%F:%L) - %m%n

### direct messages to photon log ###
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=${java.io.tmpdir}\\photon-log4j-${org.marketcetera.photon.unique}.log
log4j.appender.file.layout=org.apache.log4j.PatternLayout
log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p [%t] %c{3} (%F:%L) - %m%n	
log4j.appender.file.MaxFileSize=100KB
log4j.appender.file.MaxBackupIndex=2

### set log levels - for more verbose logging change 'info' to 'debug' ###

#log4j.threshold=error

log4j.rootCategory=error,file

# Overall Marketcetera
log4j.logger.org.marketcetera=info

#####################################
# 3rd-party apps
#####################################
log4j.logger.netmessage=info
log4j.logger.activemq.transport=error
### log just the SQL
log4j.logger.org.hibernate.SQL=error

## quickfix
log4j.logger.quickfix.codegen=error
log4j.logger.quickfix.test.acceptance=INFO
log4j.logger.quickfix.test.acceptance.TestContext=INFO
log4j.logger.quickfix=error

## apache commons i18n
log4j.logger.org.apache.commons.i18n=error