<tests xmlns="http://xmlpull.org/v1/tests/2002-08.xsd">

<!-- this initial test for CDATA handling -->
 <test-parser name="CDSECT handling">
  <create-parser/>
  <input-inline>&lt;foo>
&lt;t> &lt;![CDATA[fo]]&gt;o&lt;![CDATA[ ]]&gt;&lt;/t>
&lt;/foo> </input-inline>
  <set-feature>http://xmlpull.org/v1/doc/features.html#process-namespaces</set-feature>
  <expect type="START_DOCUMENT"/>
  <next/>
  <expect type="START_TAG" namespace="" name="foo" empty="false"/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>
  <expect type="END_TAG" namespace="" name="t" />

  <next-tag/>
  <expect type="END_TAG" namespace="" name="foo" />
  <next/>
  <expect type="END_DOCUMENT"/>
 </test-parser>





<!-- now more of complex tests -->

 <test-parser name="more CDSECT handling">
  <create-parser/>
  <input-inline>&lt;foo>
&lt;t>&lt;![CDATA[ foo]]&gt; &lt;/t>
&lt;t>&lt;![CDATA[ foo ]]&gt;&lt;/t>
&lt;t> &lt;![CDATA[foo ]]&gt;&lt;/t>
&lt;t>&lt;![CDATA[ foo]]&gt; &lt;/t>
&lt;t> &lt;![CDATA[foo]]&gt; &lt;/t>
&lt;t> &lt;![CDATA[fo]]&gt;&lt;![CDATA[o]]&gt; &lt;/t>
&lt;t> &lt;![CDATA[fo]]&gt;o&lt;![CDATA[ ]]&gt;&lt;/t>
&lt;t> &lt;![CDATA[f]]&gt;o&lt;![CDATA[o]]&gt; &lt;/t>
&lt;t>&lt;![CDATA[ f]]&gt;o&lt;![CDATA[o ]]&gt;&lt;/t>
&lt;/foo> </input-inline>
  <set-feature>http://xmlpull.org/v1/doc/features.html#process-namespaces</set-feature>
  <expect type="START_DOCUMENT"/>
  <next/>
  <expect type="START_TAG" namespace="" name="foo" empty="false"/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="START_TAG" namespace="" name="t"/>
  <next-text text=" foo "/>

  <next-tag/>
  <expect type="END_TAG" namespace="" name="foo" />
  <next/>
  <expect type="END_DOCUMENT"/>
 </test-parser>

</tests>

