//
// this file is automatically generated
//
package org.marketcetera.strategy;

import java.util.EnumSet;
import java.util.Set;

import org.marketcetera.core.Preserve;

/* $License$ */

/**
 * Describes the state of a loaded strategy.
 *
 * @author <a href="mailto:colin@marketcetera.com">Colin DuPlantis</a>
 * @version $Id$
 * @since $Release$
 */
@Preserve
public enum StrategyStatus
{
    /**
     * strategy has been loaded and is not running
     */
    STOPPED,
    /**
     * strategy is running
     */
    RUNNING,
    /**
     * an error occurred trying to load or start the strategy
     */
    ERROR,
    /**
     * the strategy is in the process of loading
     */
    LOADING,
    /**
     * the strategy is being prepared to be loaded
     */
    PREPARING;
    /**
     * Indicates that a strategy can be unloaded.
     *
     * @return a <code>boolean</code> value
     */
    public boolean isUnloadable()
    {
        return unloadable.contains(this);
    }
    /**
     * Indicates that a strategy can be started.
     *
     * @return a <code>boolean</code> value
     */
    public boolean isRunnable()
    {
        return runnable.contains(this);
    }
    /**
     * Indicates if the strategy is running.
     *
     * @return a <code>boolean</code> value
     */
    public boolean isRunning()
    {
        return RUNNING.equals(this);
    }
    /**
     * strategy statuses that indicate a strategy can be unloaded
     */
    private static final Set<StrategyStatus> unloadable = EnumSet.of(STOPPED,ERROR,LOADING,PREPARING);
    /**
     * strategy statuses that indicate a strategy can be run
     */
    private static final Set<StrategyStatus> runnable = EnumSet.of(STOPPED,ERROR);
}
