//
// this file is automatically generated
//
package org.marketcetera.strategy.events;

import org.marketcetera.core.Preserve;
import org.marketcetera.strategy.StrategyInstance;
import org.marketcetera.strategy.StrategyStatus;

/* $License$ */

/**
 * Indicates that a strategy status has changed.
 *
 * @author <a href="mailto:colin@marketcetera.com">Colin DuPlantis</a>
 * @version $Id$
 * @since $Release$
 */
@Preserve
public class SimpleStrategyStatusChangedEvent
        implements StrategyStatusChangedEvent
{
    /**
     * Create a new SimpleStrategyStatusChangedEvent instance.
     */
    public SimpleStrategyStatusChangedEvent() {}
    /**
     * Create a new SimpleStrategyStatusChangedEvent instance.
     *
     * @param inStrategyInstance a <code>StrategyInstance</code> value
     * @param inOldStatus a <code>StrategyStatus</code> value
     * @param inNewStatus a <code>StrategyStatus</code> value
     */
    public SimpleStrategyStatusChangedEvent(StrategyInstance inStrategyInstance,
                                            StrategyStatus inOldStatus,
                                            StrategyStatus inNewStatus)
    {
        strategyInstance = inStrategyInstance;
        oldValue = inOldStatus;
        newValue = inNewStatus;
    }
    /**
     * Get the strategyInstance value.
     *
     * @return an <code>org.marketcetera.strategy.StrategyInstance</code> value
     */
    @Override
    public org.marketcetera.strategy.StrategyInstance getStrategyInstance()
    {
        return strategyInstance;
    }
    /**
     * Set the strategyInstance value.
     *
     * @param inStrategyInstance an <code>org.marketcetera.strategy.StrategyInstance</code> value
     */
    public void setStrategyInstance(org.marketcetera.strategy.StrategyInstance inStrategyInstance)
    {
        strategyInstance = inStrategyInstance;
    }
    /**
     * Get the newValue value.
     *
     * @return an <code>org.marketcetera.strategy.StrategyStatus</code> value
     */
    @Override
    public org.marketcetera.strategy.StrategyStatus getNewValue()
    {
        return newValue;
    }
    /**
     * Set the newValue value.
     *
     * @param inNewValue an <code>org.marketcetera.strategy.StrategyStatus</code> value
     */
    public void setNewValue(org.marketcetera.strategy.StrategyStatus inNewValue)
    {
        newValue = inNewValue;
    }
    /**
     * Get the oldValue value.
     *
     * @return an <code>org.marketcetera.strategy.StrategyStatus</code> value
     */
    @Override
    public org.marketcetera.strategy.StrategyStatus getOldValue()
    {
        return oldValue;
    }
    /**
     * Set the oldValue value.
     *
     * @param inOldValue an <code>org.marketcetera.strategy.StrategyStatus</code> value
     */
    public void setOldValue(org.marketcetera.strategy.StrategyStatus inOldValue)
    {
        oldValue = inOldValue;
    }
    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString()
    {
        StringBuilder builder = new StringBuilder();
        builder.append("StrategyStatusChangedEvent [")
            .append("strategyInstance=").append(strategyInstance)
            .append(", newValue=").append(newValue)
            .append(", oldValue=").append(oldValue).append("]");
        return builder.toString();
    }
    /**
     * strategy instance which was successfully uploaded
     */
    private org.marketcetera.strategy.StrategyInstance strategyInstance;
    /**
     * new strategy status value
     */
    private org.marketcetera.strategy.StrategyStatus newValue;
    /**
     * old strategy status value
     */
    private org.marketcetera.strategy.StrategyStatus oldValue;
}
